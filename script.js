const TelegramBot = require("node-telegram-bot-api");
const {
  showMenu,
  showCatalog,
  showAdminMenu,
  debug,
  addAdminStickEl,
  addAdminGooEl,
  delAdminEl,
  editAdminEl,
} = require("./functions.js");
const fs = require("fs");

const TOKEN = "5976383195:AAHzDFsW09LcNBwqC4YB-evC-d_rP51xhWQ"; //—Ç–æ–∫–µ–Ω –±–æ—Ç–∞

const creator = "gh6u9do"; // –∞–¥–º–∏–Ω ID
const danik = "FKGDOKU";
const maxim = "ohhWavee";

const bot = new TelegramBot(TOKEN, {
  //–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–ª–∏–Ω–≥
  polling: true,
});

console.log("—Ä–∞–±–æ—Ç–∞–µ–º");

bot.onText(/^—Ö—É–π/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "—Å–∞–º —Ç—ã —Ö—É–π, —Ç—ã —Å–æ–æ–±—Ä–∞–∂–µ—à—å —á—Ç–æ —Ç—ã –±–æ—Ç—É –ø–∏—à–µ—à—å, —Ñ—Ä–∏–∫?");
})

bot.onText(/\/start/, (msg) => {
  //===================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –°–¢–ê–†–¢
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üôÇ"
  );
  showMenu(chatId, bot);
});

bot.onText(/\/admin/, (msg) => {
  //=========================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –ê–î–ú–ò–ù
  const chatId = msg.chat.id;
  const userName = msg.chat.username;
  if (userName == creator || userName == danik || userName == maxim) {
    showAdminMenu(chatId, bot);
  } else {
    bot.sendMessage(
      chatId,
      "—Ö—É—è–¥–º–∏–Ω"
    );
  }
});

bot.onText(/^—Ä–µ–¥\s\(.*\,.*\,.*\)/, (msg)=>{
  //===========================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨
  const chatId = msg.chat.id;
  const userName = msg.chat.username;
  let string = msg.text;

  if (userName == creator || userName == danik || userName == maxim) {
    editAdminEl(chatId, bot, string);
  } else {
    bot.sendMessage(
      chatId,
      "–ø–æ—à–µ–ª –Ω–∞—Ö—É–π —à–∫–æ–ª—å–Ω–∏–∫, —Ö–∞–∫–µ—Ä –µ–±–∞–Ω—ã–π, –Ω–∞—à–µ–ª –∫–æ–º–∞–Ω–¥—É –¥—É–º–∞–µ—à—å –∫—Ä—É—Ç–æ–π?"
    );
  }
})

bot.onText(/^–¥–æ–±\s–¥—É–¥–∫—É\s\(.*\,.*\,.*\,.*\,.*\)/, (msg) => {
  //==========================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –î–û–ë–ê–í–ò–¢–¨ –î–£–î–ö–£
  const chatId = msg.chat.id;
  const userName = msg.chat.username;
  let string = msg.text;

  if (userName == creator || userName == danik || userName == maxim) {
    addAdminStickEl(chatId, bot, string);
  } else {
    bot.sendMessage(
      chatId,
      "–ø–æ—à–µ–ª –Ω–∞—Ö—É–π —à–∫–æ–ª—å–Ω–∏–∫, —Ö–∞–∫–µ—Ä –µ–±–∞–Ω—ã–π, –Ω–∞—à–µ–ª –∫–æ–º–∞–Ω–¥—É –¥—É–º–∞–µ—à—å –∫—Ä—É—Ç–æ–π?"
    );
  }
});

bot.onText(/^–¥–æ–±\s–∂–∏–∂—É\s\(.*\,.*\,.*\,.*\)/, (msg) => {
  //==========================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –î–û–ë–ê–í–ò–¢–¨ –î–£–î–ö–£
  const chatId = msg.chat.id;
  const userName = msg.chat.username;
  let string = msg.text;

  if (userName == creator || userName == danik || userName == maxim) {
    addAdminGooEl(chatId, bot, string); //!!!!!!!!!!!!!!!!!!!!!!!!!
  } else {
    bot.sendMessage(
      chatId,
      "–ø–æ—à–µ–ª –Ω–∞—Ö—É–π —à–∫–æ–ª—å–Ω–∏–∫, —Ö–∞–∫–µ—Ä –µ–±–∞–Ω—ã–π, –Ω–∞—à–µ–ª –∫–æ–º–∞–Ω–¥—É –¥—É–º–∞–µ—à—å –∫—Ä—É—Ç–æ–π?"
    );
  }
});

bot.onText(/^—É–¥–ª\s\(.*\)/, (msg) => { 
  //=========================================–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø –£–î–ê–õ–ò–¢–¨
  const chatId = msg.chat.id;
  const userName = msg.chat.username;
  let string = msg.text;

  if (userName == creator || userName == danik || userName == maxim) {
    delAdminEl(chatId, bot, string);
  } else {
    bot.sendMessage(
      chatId,
      "–ø–æ—à–µ–ª –Ω–∞—Ö—É–π —à–∫–æ–ª—å–Ω–∏–∫, —Ö–∞–∫–µ—Ä –µ–±–∞–Ω—ã–π, –Ω–∞—à–µ–ª –∫–æ–º–∞–Ω–¥—É –¥—É–º–∞–µ—à—å –∫—Ä—É—Ç–æ–π?"
    );
  }
});

bot.on("callback_query", (query) => {
  //==============================================–û–ë–†–ê–ë–û–¢–ö–ê –ö–û–î–ê –ú–ï–ù–Æ
  let queryChatId = query.message.chat.id;
  let txtFile = fs.readFileSync("catalog.json", "utf-8");
  let jsonFile = JSON.parse(txtFile);

  switch (query.data) {
    case "1": {
      console.log(query.data);

      let bufferString = showCatalog(jsonFile);

      bot.sendMessage(queryChatId, bufferString, {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "–ù–∞–∑–∞–¥",
                callback_data: "backToMenu",
              },
            ],
          ],
        },
      });
      break;
    }
    case "2": {
      console.log(query.data);
      bot.sendMessage(queryChatId, "–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ");
      break;
    }
    case "3": {
      console.log(query.data);
      bot.sendMessage(
        queryChatId,
        "–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤ –ú—Å–∫ - @ohhWavee \n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –ú—Å–∫ - @FKGDOKU",
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ù–∞–∑–∞–¥",
                  callback_data: "backToMenu",
                },
              ],
            ],
          },
        }
      );
      break;
    }
    case "4": {
      console.log(query.data);
      bot.sendMessage(
        queryChatId,
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ @AirPuffotzivi",
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ù–∞–∑–∞–¥",
                  callback_data: "backToMenu",
                },
              ],
            ],
          },
        }
      );
      break;
    }
    case "backToMenu": {
      showMenu(queryChatId, bot);
      break;
    }
    case "backToAdminMenu": {
      showAdminMenu(queryChatId, bot);
      break;
    }
    case "admin1": {
      //–í–´–í–û–î –¢–ï–ö–°–¢–ê –ù–ê –ö–ù–û–ü–ö–£ –ü–û–ö–ê–ó–ê–¢–¨ –ö–ê–¢–ê–õ–û–ì

      let bufferString = showCatalog(jsonFile);
      bot.sendMessage(queryChatId, bufferString, {
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "–ù–∞–∑–∞–¥",
                callback_data: "backToAdminMenu",
              },
            ],
          ],
        },
      });
      break;
    }
    case "admin2": {
      //=====================================–í–´–í–û–î –¢–ï–ö–°–¢–ê –ù–ê –ö–ù–û–ü–ö–£ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –≠–õ–ï–ú–ï–ù–¢===========================

      let bufferString = showCatalog(jsonFile);
      bot.sendMessage(queryChatId, bufferString);

      let sendManual = new Promise((resolve,reject) => {
        resolve(
          bot.sendMessage(queryChatId, "[ADMIN-MENU]\n\n–ß—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n—Ä–µ–¥ (–∏–Ω–¥–µ–∫—Å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ,–ø–∞—Ä–∞–º–µ—Ç—Ä,–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)\n\n—Å–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥—É–¥–∫–∏: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç—è–≥–∏, —Ü–µ–Ω–∞, –≤–∫—É—Å—ã, –Ω–∏–∫–æ—Ç–∏–Ω\n\n—Å–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∂–∏–∂–∏: –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω–∞, –≤–∫—É—Å—ã, –Ω–∏–∫–æ—Ç–∏–Ω\n\n–û–±—Ä–∞–∑–µ—Ü –Ω–∏–∂–µ:")
        )
      })

      sendManual.then(() =>{
        bot.sendMessage(queryChatId, "—Ä–µ–¥ (1,—Ç—è–≥–∏,1500)", {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ù–∞–∑–∞–¥",
                  callback_data: "backToAdminMenu",
                },
              ],
            ],
          },
        });
      })
      break;
    }

    case "admin3": {
      //–í–´–í–û–î –¢–ï–ö–°–¢–ê –ù–ê –ö–ù–û–ü–ö–£ –î–û–ë–ê–í–ò–¢–¨ –≠–õ–ï–ú–ï–ù–¢
      let sendManual = new Promise((resolve, reject) => {
        resolve(
          bot.sendMessage(queryChatId, "[ADMIN-MENU]\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –¥—É–¥–∫—É/–∂–∏–∂—É –≤ –∫–∞—Ç–∞–ª–æ–≥ —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n–¥–æ–± –¥—É–¥–∫—É (–Ω–∞–∑–≤–∞–Ω–∏–µ,–∫–æ–ª-–≤–æ —Ç—è–≥,—Ü–µ–Ω–∞,[–≤–∫—É—Å1 –≤–∫—É—Å2 –ø–æ–ê–Ω–∞–ª–æ–≥–∏–∏],–Ω–∏–∫–æ—Ç–∏–Ω)\n\n–¥–æ–± –∂–∏–∂—É (–Ω–∞–∑–≤–∞–Ω–∏–µ,—Ü–µ–Ω–∞,[–≤–∫—É—Å1 –≤–∫—É—Å2 –ø–æ–ê–Ω–∞–ª–æ–≥–∏–∏],–Ω–∏–∫–æ—Ç–∏–Ω)\n\n–û–±—Ä–∞–∑–µ—Ü –Ω–∏–∂–µ:")
        );
      })

      sendManual.then(() => {
        bot.sendMessage(queryChatId, "–¥–æ–± –¥—É–¥–∫—É (hqd,5000,750,[–º–∞–ª–∏–Ω–∞ —è–≥–æ–¥–∞ —Ö—É–π],5%)")
      }
      ).then(() => {
        bot.sendMessage(queryChatId, "–¥–æ–± –∂–∏–∂—É (hotspot,299,[–±–∞–Ω–∞–Ω –π–æ–≥—É—Ä—Ç –∫–∏–≤–∏],5%)", {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ù–∞–∑–∞–¥",
                  callback_data: "backToAdminMenu",
                },
              ],
            ],
          },
        });
      })

      break;
    }

    case "admin4": {
      //–í–´–í–û–î –¢–ï–ö–°–¢–ê –ù–ê –ö–ù–û–ü–ö–£ –£–î–ê–õ–ò–¢–¨ –≠–õ–ï–ú–ï–ù–¢
      let sendManual = new Promise((resolve, reject) => {
        resolve(
          bot.sendMessage(queryChatId, "[ADMIN-MENU]\n\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: —É–¥–ª (–Ω–æ–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏)\n\n–û–±—Ä–∞–∑–µ—Ü –Ω–∏–∂–µ:")
        );
      });

      sendManual.then(() => {
        bot.sendMessage(queryChatId, "—É–¥–ª (1)", {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ù–∞–∑–∞–¥",
                  callback_data: "backToAdminMenu",
                },
              ],
            ],
          },
        });
      })
    }
  }
});
